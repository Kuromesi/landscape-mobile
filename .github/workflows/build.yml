name: "Build"

on:
  pull_request:
    types: [ closed ]

jobs:  
  build:
    if: contains(github.event.pull_request.labels.*.name, 'release') && github.event.pull_request.merged == true
    name: Build & Release 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set Up Java
        uses: actions/setup-java@v3.12.0
        with:
          distribution: 'oracle'
          java-version: '17'

      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - run: flutter --version

      - name: Install Dependencies
        run: flutter pub get

      - name: Decide Release Version
        run: |
          bash scripts/replace_version.sh
      
      - name: Decode Keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks
          
      - name: Create key.properties
        run: |
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=keystore.jks" >> android/key.properties
        
      - name: Echo pubspec.yaml
        run: |
          cat pubspec.yaml

      - name: Build APK
        run: flutter build apk --release

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Releases
          path: |
            build/app/outputs/flutter-apk/app-release.apk
        
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/flutter-apk/app-release.apk"
          tag: v${{ env.VERSION }}
          
      - name: Install Tools
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Set up environment
        run: |
          PUB_DATE=$(date -R)
          VERSION=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r '.tag_name')
          DOWNLOAD_URL=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r '.assets[0].browser_download_url')
          FILE_SIZE=$(curl -sI $DOWNLOAD_URL | grep -i Content-Length | awk '{print $2}' | tr -d '\r')
    
      - name: Generate appcast.xml
        run: |
          sed -e "s/{{APP_NAME}}/Landscape/g" \
              -e "s/{{VERSION}}/$VERSION/g" \
              -e "s/{{PUB_DATE}}/$PUB_DATE/g" \
              -e "s/{{CHANGELOG}}/${{ github.event.head_commit.message }}/g" \
              -e "s/{{DOWNLOAD_URL}}/$DOWNLOAD_URL/g" \
              -e "s/{{FILE_SIZE}}/$FILE_SIZE/g" \
              templates/appcast_template.xml > appcast.xml
      
      - name: Publish appcast
        run: |
          git status
          git add .
          git commit -m "[KUROMESI-BOT] publish appcast.yaml"
          git fetch origin master
          git push origin HEAD:master