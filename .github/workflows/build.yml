name: "Build"

on:
  pull_request:
    types: [ labeled ]
  # push:
  #   branches: [ workflow-test ]

jobs:  
  build:
    if: contains(github.event.pull_request.labels.*.name, 'release')
    # if: github.event.pull_request.merged == true
    name: Build & Release 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # - name: Set Up Java
      #   uses: actions/setup-java@v3.12.0
      #   with:
      #     distribution: 'oracle'
      #     java-version: '17'

      # - name: Set Up Flutter
      #   uses: subosito/flutter-action@v2
      #   with:
      #     channel: 'stable'

      # - run: flutter --version

      # - name: Install Dependencies
      #   run: flutter pub get

      - name: Decide Release Version
        run: |
          bash scripts/replace_version.sh
        
      # - name: Decode Keystore
      #   run: |
      #     echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks
          
      # - name: Create key.properties
      #   run: |
      #     echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
      #     echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
      #     echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
      #     echo "storeFile=keystore.jks" >> android/key.properties
        
      # - name: Build APK
      #   run: flutter build apk --release
      
      - name: Debug
        run: |
          cat pubspec.yaml
          echo v${{ env.VERSION }}

      # - name: Upload Artifacts
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: Releases
      #     path: |
      #       build/app/outputs/flutter-apk/app-release.apk
        
      # - name: Create Release
      #   uses: ncipollo/release-action@v1
      #   with:
      #     artifacts: "build/app/outputs/flutter-apk/app-release.apk"
      #     tag: v${{ env.VERSION }}